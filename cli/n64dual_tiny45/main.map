Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
                              n64.o (__mulhi3)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_divmodhi4.o)
                              n64.o (__divmodhi4)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o (exit)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.1.2/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(memcmp.o)
                              n64.o (memcmp)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
usbTxStatus1        0xc               usbdrv/usbdrv.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
usbSofCount         0x1               usbdrv/usbdrv.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o

Discarded input sections

 .stabstr       0x0000000000000000        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
 .stabstr       0x0000000000000000        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(memcmp.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD usbdrv/osccal.o
LOAD main.o
LOAD n64.o
LOAD /usr/lib/gcc/avr/4.1.2/libgcc.a
LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.1.2/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xecc
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000001e       0x98 usbdrv/usbdrv.o
                0x0000000000000082                usbDescriptorDevice
                0x000000000000001e                usbDescriptorString0
                0x0000000000000050                usbDescriptorStringSerialNumber
                0x0000000000000094                usbDescriptorConfiguration
                0x0000000000000022                usbDescriptorStringVendor
                0x0000000000000034                usbDescriptorStringDevice
 .progmem.data  0x00000000000000b6       0x5e main.o
                0x00000000000000b6                usbDescriptorHidReport
                0x0000000000000114                . = ALIGN (0x2)
                0x0000000000000114                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000114        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000114                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000114                __ctors_start = .
 *(.ctors)
                0x0000000000000114                __ctors_end = .
                0x0000000000000114                __dtors_start = .
 *(.dtors)
                0x0000000000000114                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000114        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
                0x0000000000000114                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000114        0xc /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000120       0x18 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
                0x0000000000000120                __do_copy_data
 .init4         0x0000000000000138       0x10 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
                0x0000000000000138                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000148        0x4 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
 *(.init9)
 *(.text)
 .text          0x000000000000014c        0x2 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
                0x000000000000014c                __vector_12
                0x000000000000014c                __bad_interrupt
                0x000000000000014c                __vector_6
                0x000000000000014c                __vector_3
                0x000000000000014c                __vector_11
                0x000000000000014c                __vector_13
                0x000000000000014c                __vector_7
                0x000000000000014c                __vector_5
                0x000000000000014c                __vector_4
                0x000000000000014c                __vector_9
                0x000000000000014c                __vector_2
                0x000000000000014c                __vector_8
                0x000000000000014c                __vector_14
                0x000000000000014c                __vector_10
 .text          0x000000000000014e      0x2ba usbdrv/usbdrv.o
                0x00000000000001ae                usbPoll
                0x0000000000000168                usbSetInterrupt
                0x000000000000014e                usbInit
 .text          0x0000000000000408      0x33e usbdrv/usbdrvasm.o
                0x0000000000000480                __vector_1
                0x0000000000000408                usbCrc16
                0x0000000000000452                usbCrc16Append
                0x000000000000045a                usbMeasureFrameLength
 .text          0x0000000000000746        0x0 usbdrv/oddebug.o
 .text          0x0000000000000746       0x7e usbdrv/osccal.o
                0x0000000000000746                calibrateOscillator
 .text          0x00000000000007c4      0x1b2 main.o
                0x00000000000007c4                usbFunctionSetup
                0x0000000000000844                main
 .text          0x0000000000000976      0x4c0 n64.o
                0x0000000000000dbe                n64GetGamepad
                0x000000000000098a                _tmpdata2report
                0x0000000000000af6                _n64UpdateA
                0x0000000000000bf0                _n64UpdateB
 .text          0x0000000000000e36        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
 .text          0x0000000000000e36        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000e36        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .text          0x0000000000000e36        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .text          0x0000000000000e36        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .text          0x0000000000000e36        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000e36        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(memcmp.o)
                0x0000000000000e36                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000e36       0x24 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
                0x0000000000000e36                __mulhi3
 .text.libgcc   0x0000000000000e5a       0x26 /usr/lib/gcc/avr/4.1.2/libgcc.a(_divmodhi4.o)
                0x0000000000000e5a                __divmodhi4
                0x0000000000000e5a                _div
 .text.libgcc   0x0000000000000e80        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000e80        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000e80        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000e80       0x2c /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
                0x0000000000000e80                __udivmodhi4
 .text.avr-libc
                0x0000000000000eac       0x1e /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(memcmp.o)
                0x0000000000000eac                memcmp
                0x0000000000000eca                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000eca        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
                0x0000000000000eca                exit
                0x0000000000000eca                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000eca        0x2 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000ecc                _etext = .

.data           0x0000000000800060       0x10 load address 0x0000000000000ecc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
 .data          0x0000000000800060        0x2 usbdrv/usbdrv.o
                0x0000000000800060                usbTxLen
 .data          0x0000000000800062        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800062        0x0 usbdrv/oddebug.o
 .data          0x0000000000800062        0x0 usbdrv/osccal.o
 .data          0x0000000000800062        0x0 main.o
 .data          0x0000000000800062        0xe n64.o
                0x0000000000800062                N64Gamepad
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(memcmp.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800070                . = ALIGN (0x2)
                0x0000000000800070                _edata = .
                0x0000000000800070                PROVIDE (__data_end, .)

.bss            0x0000000000800070       0x56
                0x0000000000800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
 .bss           0x0000000000800070        0x2 usbdrv/usbdrv.o
 .bss           0x0000000000800072        0x0 usbdrv/usbdrvasm.o
 .bss           0x0000000000800072        0x0 usbdrv/oddebug.o
 .bss           0x0000000000800072        0x0 usbdrv/osccal.o
 .bss           0x0000000000800072        0xb main.o
 .bss           0x000000000080007d       0x12 n64.o
 .bss           0x000000000080008f        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
 .bss           0x000000000080008f        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080008f        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .bss           0x000000000080008f        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .bss           0x000000000080008f        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .bss           0x000000000080008f        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080008f        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(memcmp.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080008f       0x37 usbdrv/usbdrv.o
                0x000000000080008f                usbTxBuf
                0x000000000080009a                usbTxStatus1
                0x00000000008000a6                usbDeviceAddr
                0x00000000008000a7                usbRxToken
                0x00000000008000a8                usbInputBufOffset
                0x00000000008000a9                usbSofCount
                0x00000000008000aa                usbMsgPtr
                0x00000000008000ac                usbRxLen
                0x00000000008000ad                usbNewDeviceAddr
                0x00000000008000ae                usbCurrentTok
                0x00000000008000af                usbConfiguration
                0x00000000008000b0                usbRxBuf
                0x00000000008000c6                PROVIDE (__bss_end, .)
                0x0000000000000ecc                __data_load_start = LOADADDR (.data)
                0x0000000000000edc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000c6        0x0
                0x00000000008000c6                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000c6                PROVIDE (__noinit_end, .)
                0x00000000008000c6                _end = .
                0x00000000008000c6                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.stab           0x0000000000000000      0x768
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o
 .stab          0x00000000000006b4       0xb4 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(memcmp.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000       0x82
 *(.stabstr)
 .stabstr       0x0000000000000000       0x82 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn45.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
